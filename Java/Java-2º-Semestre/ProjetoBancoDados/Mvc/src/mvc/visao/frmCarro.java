/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mvc.visao;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashSet;
import java.util.Set;
import java.util.Vector;
import javax.swing.ButtonModel;
import javax.swing.table.DefaultTableModel;
import mvc.controle.Conn;
import mvc.controle.ConnCarro;
import mvc.modelo.Carro;
import util.ES;

/**
 *
 * @author LABINFO
 */
public class frmCarro extends javax.swing.JFrame {

    /**
     * Creates new form frmCarro
     */
    public frmCarro() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoCombustivel = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        txtPlaca = new javax.swing.JTextField();
        cbxCor = new javax.swing.JComboBox<>();
        rdbGasolina = new javax.swing.JRadioButton();
        rdbAlcool = new javax.swing.JRadioButton();
        rdbDiesel = new javax.swing.JRadioButton();
        rdbFlex = new javax.swing.JRadioButton();
        btNovo = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnConsultar = new javax.swing.JButton();
        lblId = new javax.swing.JLabel();
        btnExcluir = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaCarro = new javax.swing.JTable();
        btnTesteConexao = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Cadastro de Veículo"));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Nome:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Placa:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Cor:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Combustível");

        cbxCor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "branco", "prata", "azul", "vermelho" }));

        grupoCombustivel.add(rdbGasolina);
        rdbGasolina.setSelected(true);
        rdbGasolina.setText("GASOLINA");

        grupoCombustivel.add(rdbAlcool);
        rdbAlcool.setText("ÁLCOOL");

        grupoCombustivel.add(rdbDiesel);
        rdbDiesel.setText("DIESEL");

        grupoCombustivel.add(rdbFlex);
        rdbFlex.setText("FLEX");

        btNovo.setText("NOVO");
        btNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovoActionPerformed(evt);
            }
        });

        btnSalvar.setText("SALVAR");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnEditar.setText("EDITAR");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnConsultar.setText("CONSULTAR");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        lblId.setOpaque(true);

        btnExcluir.setText("EXCLUIR");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btNovo)
                                    .addComponent(rdbGasolina))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(rdbAlcool)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(rdbDiesel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(rdbFlex))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(btnSalvar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnEditar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnConsultar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnExcluir)))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtPlaca))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(cbxCor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblId, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblId, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbxCor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbGasolina)
                    .addComponent(rdbAlcool)
                    .addComponent(rdbDiesel)
                    .addComponent(rdbFlex))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btNovo)
                    .addComponent(btnSalvar)
                    .addComponent(btnEditar)
                    .addComponent(btnConsultar)
                    .addComponent(btnExcluir))
                .addContainerGap())
        );

        btnSair.setText("SAIR");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        tabelaCarro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "id", "Nome", "Placa", "Cor", "Combustível"
            }
        ));
        tabelaCarro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaCarroMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaCarro);

        btnTesteConexao.setText("Teste de Conexão");
        btnTesteConexao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTesteConexaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnTesteConexao)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnSair)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSair)
                    .addComponent(btnTesteConexao))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        // TODO add your handling code here:
        ES.mostrarMensagem("Finalizando...", this);
        System.exit(0);
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        // TODO add your handling code here:
        
         Carro c = new Carro();
         ConnCarro objCarro = new ConnCarro();
         if(btnSalvar.getText().equals("SALVAR") && lblId.getText().equals(""))
         {
             if(ES.tahPreenchido(txtNome, this) && ES.tahPreenchido(txtPlaca, this) || txtNome.getText().length()<20)
        {
            c.setNome(txtNome.getText());
            c.setPlaca(txtPlaca.getText());
            c.setCor(""+cbxCor.getSelectedItem());
            
            if(rdbGasolina.isSelected())
            {
                c.setCombustivel("Gasolina");
            }
            else if(rdbAlcool.isSelected())
            {
                c.setCombustivel("Álcool");
            }
            else if (rdbDiesel.isSelected())
            {
                c.setCombustivel("Diesel");
            }
            else if (rdbFlex.isSelected())
            {
                c.setCombustivel("Flex");
            }
            else
            {
               ES.mostrarMensagem("Selecione um tipo de combustível!", this);
            }
   
            //Inserção de dados no banco
            try
            {
                objCarro.inserir(c);
                ES.mostrarMensagem("Registrado com sucesso!!", this);
            }
            catch (SQLException ex)
                    {
                        System.out.println("Ocorreu um erro: "+ex);
                        ES.mostrarMensagem(""+ex, null);
                    }
            limparCampos();
            montarTabela();
        } 
     }
        else if(btnSalvar.getText().equals("SALVAR REGISTRO"))
        {
            if(ES.tahPreenchido(txtNome, this) && ES.tahPreenchido(txtPlaca, this))
            {
                c.setIdCarro(Integer.parseInt(lblId.getText()));
                c.setNome(txtNome.getText());
                c.setPlaca(txtPlaca.getText());
            }
            String cor = cbxCor.getSelectedItem().toString();
            c.setCor(cor);
            if(rdbGasolina.isSelected())
            {
                c.setCombustivel("Gasolina");
            }
            else if (rdbAlcool.isSelected())
            {
                c.setCombustivel("Álcool");
            }
            else if(rdbDiesel.isSelected())
            {
                c.setCombustivel("Diesle");
            }
            else if(rdbFlex.isSelected())
            {
                c.setCombustivel("Flex");
            }
            
            try
            {
                objCarro.alterar(c);
                ES.mostrarMensagem("Registro alterado com sucesso!", this);
                montarTabela();
            }
            catch (SQLException ex)
            {
                        ES.mostrarMensagem("Algo deu errado ao alterar o resgistro: "+ex, this);
            }
        } 
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        // TODO add your handling code here:
        limparCampos();
        montarTabela();
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovoActionPerformed
        // TODO add your handling code here:
        limparTabela();
        limparCampos();
    }//GEN-LAST:event_btNovoActionPerformed

    public void limparCampos()
    {
        lblId.setText("");
        txtNome.setText("");
        txtPlaca.setText("");
        cbxCor.setSelectedIndex(0);
        grupoCombustivel.clearSelection();
        rdbGasolina.setSelected(true);
        
        btnSalvar.setText("SALVAR");
        btnExcluir.setText("EXCLUIR");
    }
    private void btnTesteConexaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTesteConexaoActionPerformed
        // TODO add your handling code here:
        Conn c = new Conn();
        c.conectaBD();
        ES.mostrarMensagem("Conexão Realizada com sucesso!", null);
    }//GEN-LAST:event_btnTesteConexaoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
            limparCampos();
            limparTabela();
            montarTabela();
            ES.mostrarMensagem("Dê um clique sobre o registro que deseja alterar!", this);  
            btnSalvar.setText("SALVAR REGISTRO");          
    }//GEN-LAST:event_btnEditarActionPerformed

    private void tabelaCarroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaCarroMouseClicked
        // TODO add your handling code here:
        Carro c = new Carro();
        
        if(evt.getClickCount()==1)
        {
            c.setIdCarro((int)(tabelaCarro.getValueAt(tabelaCarro.getSelectedRow(), 0)));
            lblId.setText(""+c.getIdCarro());
            c.setNome((""+tabelaCarro.getValueAt(tabelaCarro.getSelectedRow(),1)));
            c.setPlaca((""+tabelaCarro.getValueAt(tabelaCarro.getSelectedRow(),2)));
            c.setCor((""+tabelaCarro.getValueAt(tabelaCarro.getSelectedRow(),3)));
            c.setCombustivel((""+tabelaCarro.getValueAt(tabelaCarro.getSelectedRow(),4)));
            txtNome.setText(c.getNome());
            txtPlaca.setText(c.getPlaca());
            
           //Validação do dado combustível
            if(c.getCombustivel().equals("Gasolina"))
            {
                rdbGasolina.setSelected(true);
                rdbAlcool.setSelected(false);
                rdbDiesel.setSelected(false);
                rdbFlex.setSelected(false);
            }
            else  if(c.getCombustivel().equals("Alcool"))
            {
                rdbGasolina.setSelected(false);
                rdbAlcool.setSelected(true);
                rdbDiesel.setSelected(false);
                rdbFlex.setSelected(false);
            }
             else  if(c.getCombustivel().equals("Diesel"))
            {
                rdbGasolina.setSelected(false);
                rdbAlcool.setSelected(false);
                rdbDiesel.setSelected(true);
                rdbFlex.setSelected(false);
            }
             else  
            {
                rdbGasolina.setSelected(false);
                rdbAlcool.setSelected(false);
                rdbDiesel.setSelected(false);
                rdbFlex.setSelected(true);
            }
            //Validação do dado Cor
            if(c.getCor().equals("branco"))
                cbxCor.setSelectedIndex(0);
            else if(c.getCor().equals("prata"))
                cbxCor.setSelectedIndex(1);
            else if(c.getCor().equals("azul"))
                cbxCor.setSelectedIndex(2);
            else 
                cbxCor.setSelectedIndex(3);
        }
        
    }//GEN-LAST:event_tabelaCarroMouseClicked

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here:
        if(btnExcluir.getText().equals("EXCLUIR"))
        {
            limparCampos();
            limparTabela();
            montarTabela();
            btnExcluir.setText("EXCLUIR REGISTRO");
            ES.mostrarMensagem("Dê um clique sobre o registro que deseja excluir!", this);
        }
        else if(btnExcluir.getText().equals("EXCLUIR REGISTRO") && lblId.getText()!=(""))
        {
            Carro c = new Carro();
            ConnCarro objCarro = new ConnCarro();
            int resp;
            //pegando o id do carro que foi selecionado
            c.setIdCarro((int)(tabelaCarro.getValueAt(tabelaCarro.getSelectedRow(), 0)));
            
            //solicitando confirmação de exclusão
            resp = ES.solicitarResposta("EXCLUSÃO","Deseja excluir o carro: "+c.getIdCarro());
            
            if(resp==0)//resposta sim
            {
                ES.mostrarMensagem("Será excluido o carro "+c.getIdCarro(), this);
                try
                {
                    objCarro.excluir(c);
                    ES.mostrarMensagem("Carro excluido com sucesso!", this);
                    montarTabela();
                }
                catch (SQLException ex)
                {
                            System.out.println("Ocorreu um erro: "+ex);
                            ES.mostrarMensagem(""+ex, this);
                }
                
            }
            else if(resp==1)//resposta não
            {
                ES.mostrarMensagem("Exclusão Cancelada!", this);
                limparCampos();
            }
        }
        else //Se o usuário não selecionar nenhum registro
            ES.mostrarMensagem("Selecione o resgistro!", this);
            
    }//GEN-LAST:event_btnExcluirActionPerformed

    public void montarTabela()
    {
        try
        {
            ConnCarro objCarro = new ConnCarro();
            ResultSet rs = objCarro.consultar(); // recebe os dados da consulta
            //Modelo de tabela que trabalha juntamente com a tabela
            DefaultTableModel dtmCarro = (DefaultTableModel)tabelaCarro.getModel();
            limparTabela();
            
            //Armazanando cada linha de um registro em um vetor
            //para depois exibir
            while(rs.next())
            {
                Vector lista = new Vector();
                lista.add(rs.getInt("idCarro"));
                lista.add(rs.getString ("nome"));
                lista.add(rs.getString("placa"));
                lista.add(rs.getString("cor"));
                lista.add(rs.getString("combustivel"));
                
                //Adicionando no modelo de tabela a linha completa de um registro
                dtmCarro.addRow(lista);
            }
        }
        catch (SQLException ex)
                {
                    ES.mostrarMensagem("Ocorreu um erro "+ex, null);
                }
    }
    public void limparTabela()
    {
        DefaultTableModel dtmCarro = (DefaultTableModel)tabelaCarro.getModel();
        //modelo de tabela que trabalha juntamente com a jTable
        
        //deixa a tabela sem regsitros
        while(dtmCarro.getRowCount()>0)
            dtmCarro.removeRow(0);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmCarro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmCarro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmCarro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmCarro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmCarro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btNovo;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnTesteConexao;
    private javax.swing.JComboBox<String> cbxCor;
    private javax.swing.ButtonGroup grupoCombustivel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblId;
    private javax.swing.JRadioButton rdbAlcool;
    private javax.swing.JRadioButton rdbDiesel;
    private javax.swing.JRadioButton rdbFlex;
    private javax.swing.JRadioButton rdbGasolina;
    private javax.swing.JTable tabelaCarro;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtPlaca;
    // End of variables declaration//GEN-END:variables
}
