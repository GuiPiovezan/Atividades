CREATE TABLE PROFISSAO
(
 idPROFISSAO INT NOT NULL,
 PROFISSAO VARCHAR (45),
 CONSTRAINT PK_idPROFISSAO PRIMARY KEY (idPROFISSAO)
);
INSERT INTO PROFISSAO (PROFISSAO) VALUES ('Gerente');
INSERT INTO PROFISSAO (PROFISSAO) VALUES ('Vendedor');
INSERT INTO PROFISSAO (PROFISSAO) VALUES ('Programador');
INSERT INTO PROFISSAO (PROFISSAO) VALUES ('Contador');

CREATE TABLE FUNCIONARIO
(
 idFUNCIONARIO INT NOT NULL,
 NOME VARCHAR (45),
 codPROFISSAO int,
 CONSTRAINT PK_idFUNCIONARIO PRIMARY KEY (idFUNCIONARIO)
 CONSTRAINT FK_cod_PROFISSAO FOREIGN KEY (codPROFISSAO) references PROFISSAO (idPROFISSAO)
);
INSERT INTO FUNCIONARIO (NOME, codPROFISSAO) VALUES ('José',4);
INSERT INTO FUNCIONARIO (NOME, codPROFISSAO) VALUES ('Ana',2);
INSERT INTO FUNCIONARIO (NOME, codPROFISSAO) VALUES ('Carla',2);
INSERT INTO FUNCIONARIO (NOME, codPROFISSAO) VALUES ('Sandra',1);


1) - SELECIONE TODOS OS DADOS DA TABELA PROFISSAO E FUNCIONARIO LEVANDO EM CONSIDERÇÃO SUAS CORRESPONDÊNCIAS ENTRE SI.
SELECT *
FROM PROFISSAO P FULL (OUTER) JOIN FUNCIONARIO F 
ON P.idPROFISSAO = F.idFUNCIONARIO;

2) - SELECIONE TODOS OS DADOS, TANTO DA TABELA FUNCIONARIO QUANTO DA TABELA PROFISSÃO, EXCLUINDO AS CORRESPONDÊNCIAS ENTRE SI.
SELECT *
FROM PROFISSAO P FULL (OUTER) JOIN FUNCIONARIO F 
ON P.idPROFISSAO = F.idFUNCIONARIO
WHERE P.idPROFISSAO IS NULL 
OR F.idFUNCIONARIO IS NULL;
